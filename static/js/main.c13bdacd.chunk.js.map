{"version":3,"sources":["hooks/useForm.js","selectors/getMovieByName.js","components/MovieCard.js","components/SeacrhScreen.js","data/movies.js","routers/AppRouter.js","MoviesApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","resetForm","getMovieByName","movies","toLocaleLowerCase","filter","movie","includes","MovieCard","id","image","className","style","maxWidth","src","alt","SeacrhScreen","setMovies","getData","url","a","fetch","then","response","json","data","results","navigate","useNavigate","location","useLocation","console","log","querystring","parse","search","q","searchText","moviesFilterd","useEffect","class","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","map","AppRouter","exact","path","element","MoviesApp","ReactDOM","render","document","getElementById"],"mappings":"4NAeeA,EAbC,WAAwB,IAAvBC,EAAsB,uDAAP,GAC5B,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACMC,EAAmB,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACvBF,EAAU,2BACHD,GADE,kBAEJG,EAAOC,KAAQD,EAAOE,UAGzBC,EAAW,WACbL,EAAUH,IAEd,MAAO,CAACE,EAAQE,EAAmBI,I,kBCLxBC,EALO,SAACH,EAAMI,GAE3B,OADAJ,EAAOA,EAAKK,oBACLD,EAAOE,QAAO,SAAAC,GAAK,OAAEA,EAAMP,KAAKK,oBAAoBG,SAASR,O,OCFzDS,EAAY,SAAC,GAInB,IAHHC,EAGE,EAHFA,GACAV,EAEE,EAFFA,KACAW,EACE,EADFA,MAEA,OACI,8BACI,sBAAKD,GAAIA,EAAIE,UAAU,8CAA8CC,MAAO,CAAEC,SAAU,KAAxF,UAEQ,qBAAKF,UAAU,WAAf,SACI,qBAAKG,IAAKJ,EAAOC,UAAU,WAAWI,IAAKhB,MAG3C,qBAAKY,UAAU,YAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BZ,YCP3CiB,G,OAAgB,WACzB,MAA4BtB,mBAAS,IAArC,mBAAOS,EAAP,KAAec,EAAf,KACMC,EAAO,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sEACNC,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACvBF,MAAK,SAAAG,GACFR,EAAUQ,EAAKC,YAJX,2CAAH,sDAUPC,EAAWC,cACXC,EAAWC,cACjBC,QAAQC,IAAI7B,GACZ,MAAgB8B,IAAYC,MAAML,EAASM,QAApCC,EAEP,EAA+C5C,EAAQ,CACpD6C,gBAHH,MAAW,GAAX,IAEA,mBAAO1C,EAAP,KAAeE,EAAf,KAGQwC,GAHR,KAGuB1C,EAAf0C,YACRN,QAAQC,IAAIH,GACZ,IAAMS,EAAgBpC,EAAemC,EAAYlC,GAejD,OALDoC,qBAAU,WACRrB,EC3Cc,8FD4Cb,IAIE,gCACI,qBAAKsB,MAAM,gBAAX,eACA,uBACA,sBAAK7B,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,+CACA,uBACA,sBAAM8B,SArBD,SAACC,GAClBA,EAAEC,iBACFZ,QAAQC,IAAIK,GACZV,EAAS,WAAD,OAAYU,KAkBR,SACI,uBACIO,KAAK,OACLC,YAAY,kBACZlC,UAAU,eACVZ,KAAK,aACL+C,aAAa,MACb9C,MAAOqC,EACPU,SAAUlD,SAKtB,sBAAKc,UAAU,aAAf,UACI,2CACA,uBAEI2B,EAAcU,KAAI,SAAA1C,GAAK,OACnB,cAAC,EAAD,CAEAG,GAAIH,EAAMG,GACVV,KAAMO,EAAMP,KACZW,MAAOJ,EAAMI,OAHRJ,EAAMG,kBE/D1BwC,EAAY,WACrB,OACI,cAAC,IAAD,UAEQ,eAAC,IAAD,WAGI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,cAAcC,QAAS,cAAC,EAAD,YChBhDC,EAAY,WACrB,OACI,qBAAKb,MAAM,QAAX,SACI,cAAC,EAAD,O,OCCZc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c13bdacd.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n    const handleInputChange =({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n    const resetForm =()=>{\r\n        setValues(initialState)\r\n    }\r\n    return [values, handleInputChange, resetForm]\r\n}\r\nexport default useForm;","\r\n\r\n\r\nconst getMovieByName =(name, movies) => {\r\n  name = name.toLocaleLowerCase()\r\n  return movies.filter(movie=>movie.name.toLocaleLowerCase().includes(name)\r\n  )\r\n}\r\nexport default getMovieByName","import React from 'react'\r\n\r\n\r\nexport const MovieCard = ({\r\n    id,\r\n    name,\r\n    image\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div id={id} className=\"card ms-3 animate__animated animate__fadeIn\" style={{ maxWidth: 540 }}>\r\n                \r\n                    <div className=\"col-md-4\">\r\n                        <img src={image} className=\"card-img\" alt={name} />\r\n                    </div>\r\n                    \r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{name}</h5>\r\n                        </div>\r\n\r\n                   \r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport useForm from '../hooks/useForm'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport querystring from 'query-string'\r\nimport getMovieByName from '../selectors/getMovieByName'\r\nimport {MovieCard} from '../components/MovieCard'\r\n\r\nimport {url} from '../data/movies'\r\nimport { queries } from '@testing-library/react'\r\n\r\nexport const SeacrhScreen =  () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const getData = async(url)=>{\r\n        await fetch(url)\r\n         .then(response => response.json())\r\n            .then(data => {\r\n                setMovies(data.results)\r\n            });\r\n        \r\n    }\r\n    \r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    console.log(movies)\r\n    const {q = ''} =querystring.parse(location.search)\r\n    // console.log(q)\r\n    const [values, handleInputChange, resetForm] = useForm({\r\n       searchText: q,\r\n    })\r\n    const { searchText } = values\r\n    console.log(location)\r\n    const moviesFilterd = getMovieByName(searchText, movies)\r\n    // console.log(moviesFilterd)\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        console.log(searchText)\r\n        navigate(`/movies/${searchText}`)\r\n\r\n\r\n\r\n    }\r\n   useEffect(() => {\r\n     getData(url)\r\n   }, []);\r\n   \r\n    \r\n    return (\r\n        <div>\r\n            <div class=\"starwarstitle\">.</div>\r\n            <hr></hr>\r\n            <div className=\"col\">\r\n                <div className=\"colsearch\">\r\n                    <h4> Search Form </h4>\r\n                    <hr />\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Find your movie\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={searchText}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                     \r\n                    </form>\r\n                </div>\r\n                <div className=\"colresults\">\r\n                    <h4> Results </h4>\r\n                    <hr />\r\n                    {\r\n                        moviesFilterd.map(movie=>(\r\n                            <MovieCard\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            name={movie.name}\r\n                            image={movie.image}\r\n                            />\r\n                        ))\r\n\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const url = 'https://raw.githubusercontent.com/jennymontoya1001/endpointheroesjson/main/starwars.json'","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route\r\n  } from 'react-router-dom';\r\n\r\n\r\nimport { SeacrhScreen } from '../components/SeacrhScreen';\r\n\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n         \r\n                <Routes> \r\n                    \r\n                    \r\n                    <Route exact path=\"/\" element={<SeacrhScreen/>} />\r\n                    <Route exact path=\"/movies/:id\" element={<SeacrhScreen/>} />\r\n                </Routes>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const MoviesApp = () => {\r\n    return (\r\n        <div class=\"AppPp\">\r\n            <AppRouter />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MoviesApp } from './MoviesApp';\r\nimport './index.css'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <MoviesApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}